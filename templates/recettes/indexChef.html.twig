{% extends 'chefbase.html.twig' %}

{% block title %}Recettes index{% endblock %}

{% block body %}
<div class="inner-banner inner-bg5">
    <div class="container">
        <div class="inner-title text-center">
            <h3> Recipe</h3>
            <ul>
                <li>
                      <a href="index.html">Home</a>
                </li>
                <li> Recipe</li>
            </ul>
        </div>
    </div>
</div>

<div class="recent-recipe-area pt-100 pb-70">
    <div class="container">
        <div class="section-title text-center">
            <span>Recent Recipe</span>
            <h2>Our Latest Recipe</h2>
        </div>
    </div>
    
</div>

    <div class="side-bar-area pl-20">
    <div class="search-widget">
        <input type="search" id="searchInput" class="form-control" placeholder="Search..." data-search-url="{{ path('search_recipes') }}">
        <div id="searchResults" class="search-results"></div> 
    </div>
    
    <div class="container">
        <div class="row pt-45 justify-content-center" id="recipeContainer">
            {% for recette in recettes %}
            <div class="col-lg-4 col-md-6 recipe-item">
                <div class="recent-recipe-item">
                    <a href="{{ path('app_recettes_show_chef_2', {'idR': recette.idR}) }}">
                        <img src="{{ recette.imgsrc }}" alt="Images">
                    </a>
                    <div class="content">
                        <h3><a href="{{ path('app_recettes_show_chef_2', {'idR': recette.idR}) }}">{{ recette.nom }}</a></h3>
                        <p>{{ recette.description }}</p>
                        <ul>
                            <li><img src="/assets/images/recipe-img/recipe-user1.jpg" alt="Images"></li>
                            <li><a href="author.html">By {{ recette.chef }}</a></li>
                        </ul>
                    </div>
                    
                      

                    
                </div>
            </div>
            {% endfor %}
        </div>
        <div class="col-lg-12 col-md-12 text-center">
            <div class="pagination-area" id="pagination-container"></div>
        </div>
    </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
        
        document.getElementById('filterButton').addEventListener('click', function() {
         
            fetchFilteredRecipes();
        });
    });

    function fetchFilteredRecipes() {
       
        const calories = document.getElementById('caloriesInput').value;
        const protein = document.getElementById('proteinInput').value;  
        const url = `/filter?calories=${calories}&protein=${protein}`;    
        fetch(url)
            .then(response => response.text())
            .then(html => {
                document.getElementById('recipeContainer').innerHTML = html;
            })
            .catch(error => console.error('Error fetching filtered recipes:', error));
    }


    document.addEventListener('DOMContentLoaded', function() {
        const itemsPerPage = 6; 
        const recipes = document.querySelectorAll('.recipe-item');
        const numPages = Math.ceil(recipes.length / itemsPerPage);

        function paginate(page) {
            recipes.forEach((recipe, index) => {
                const start = (page - 1) * itemsPerPage;
                const end = start + itemsPerPage;
                if (index >= start && index < end) {
                    recipe.style.display = 'block';
                } else {
                    recipe.style.display = 'none';
                }
            });
        }

        function createPaginationLinks() {
            const paginationContainer = document.getElementById('pagination-container');
            for (let i = 1; i <= numPages; i++) {
                const link = document.createElement('a');
                link.href = '#';
                link.textContent = i;
                link.addEventListener('click', function(event) {
                    event.preventDefault();
                    paginate(i);
                });
                paginationContainer.appendChild(link);
                paginationContainer.appendChild(document.createTextNode(' '));
            }
        }

        createPaginationLinks();
        paginate(1); 

    });

    const searchInput = document.getElementById('searchInput');
    const searchResults = document.getElementById('searchResults');
    const url = searchInput.getAttribute('data-search-url');
    searchInput.addEventListener('input', function() {
        const query = searchInput.value.trim();
        if (query.length === 0) {
            searchResults.innerHTML = '';
            return;
        }
        const fullUrl = url + '?query=' + encodeURIComponent(query);
        fetch(fullUrl)
            .then(response => response.text())
            .then(html => {
                searchResults.innerHTML = html;
                // Add pagination for search results if needed
            })
            .catch(error => console.error('Error fetching search results:', error));
    });
</script>

{% endblock %}
